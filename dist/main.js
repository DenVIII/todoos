(()=>{"use strict";function t(){return`${Math.floor(Math.random()*Date.now()).toString().substring(0,5)}-${Math.floor(Math.random()*Date.now()).toString().substring(0,5)}`}class e{constructor(e){this.title=e,this.projectId=t(),this._project=[]}addNewTask(t){this._project.push(t)}deleteTask(t){const e=this._project.findIndex((e=>e.taskId===t));-1!==e&&this._project.splice(e,1)}getProject(){return Array.from(this._project)}getTitle(){return this.title}getProjectId(){return this.projectId}}const s=new class{constructor(e,s,r,i="-"){this.title=e,this.dueDate=s,this.taskId=t(),this.description=i}getTitle(){return this.title}getDueDate(){return this.dueDate}getTaskId(){return this.taskId}getDescription(){return this.description}setTitle(t){this.title=t}setDueDate(t){this.dueDate=t}setDescription(t){this.description=t}}("First task (second try)","01.04.24"),r=new e("New Project"),i=new class{constructor(){this._projectsList=[]}getProjectsList(){return Array.from(this._projectsList)}addNewProject(t){this._projectsList.push(t)}deleteProject(t){const e=this._projectsList.findIndex((e=>e.projectId===t));-1!==e&&this._projectsList.splice(e,1)}};i.addNewProject(r),r.addNewTask(s);const o=new e("Today");i.addNewProject(o),o.addNewTask({abc:11}),console.log(i.getProjectsList()),i.deleteProject(o.getProjectId()),console.log(i.getProjectsList())})();